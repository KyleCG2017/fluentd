apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluentd-application
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  source:
    chart: fluentd
    repoURL: https://fluent.github.io/helm-charts
    targetRevision: 0.5.2
    helm:
      parameters:
        # Use the debian-based image which has better plugin installation support
        - name: image.repository
          value: ghcr.io/fluent/fluentd
        - name: image.tag
          value: v1.16.2-debian-1.0
        # Use Debian-based image
        - name: resources.requests.cpu
          value: "10m"
        - name: resources.requests.memory
          value: 128Mi
        - name: resources.limits.memory
          value: 128Mi
        - name: autoscaling.enabled
          value: "true"
        - name: autoscaling.minReplicas
          value: "1"
        - name: autoscaling.maxReplicas
          value: "2"
        - name: autoscaling.targetCPUUtilizationPercentage
          value: "80"
        - name: serviceAccount.create
          value: "true"
        - name: serviceAccount.name
          value: fluentd-role
        - name: serviceAccount.annotations.eks\.amazonaws\.com/role-arn
          value: arn:aws:iam::<YOUR_ACCOUNT_ID>:role/<YOUR_FLUENTD_ROLE>
        # Don't specify plugins here - install them in the Dockerfile or with gem install commands
        - name: env[0].name
          value: "FLUENT_LOKI_HOST"
        - name: env[0].value
          value: "loki-query-frontend"
        - name: env[1].name
          value: "FLUENT_LOKI_PORT"
        - name: env[1].value
          value: "3100"
        - name: fileConfigs.01_sources\.conf
          value: |
            <source>
              @type cloudwatch_logs
              region us-east-1
              log_group_name awie-g3-d-kta-app-01-log
              log_stream_name trans-log-stream
              aws_sts_role_arn arn:aws:iam::727594547879:role/awie-iamr-ngdev-api-fluentd
              tag cloudwatch.app
            </source>
            <source>
              @type cloudwatch_logs
              region us-east-1
              log_group_name awie-g3-d-kta-trans-01-log
              log_stream_name trans-log-stream
              aws_sts_role_arn arn:aws:iam::727594547879:role/awie-iamr-ngdev-api-fluentd
              tag cloudwatch.trans
            </source>
        - name: fileConfigs.04_outputs\.conf
          value: |
            <match cloudwatch.app>
              @type loki
              url http://loki-query-frontend:3100
              <label>
                app fluentd
                name awie-g3-d-kta-app-01-log
                namespace monitoring
              </label>
              <buffer>
                flush_interval 5s
              </buffer>
            </match>
            <match cloudwatch.trans>
              @type loki
              url http://loki-query-frontend:3100
              <label>
                app fluentd
                name awie-g3-d-kta-trans-01-log
                namespace monitoring
              </label>
              <buffer>
                flush_interval 5s
              </buffer>
            </match>
        # Include init container to install required plugins
        - name: extraInitContainers[0].name
          value: "install-plugins"
        - name: extraInitContainers[0].image
          value: "fluent/fluentd:v1.16-debian-1"
        - name: extraInitContainers[0].command[0]
          value: "/bin/sh"
        - name: extraInitContainers[0].command[1]
          value: "-c"
        - name: extraInitContainers[0].command[2]
          value: "gem install fluent-plugin-grafana-loki fluent-plugin-cloudwatch-logs aws-sdk -V && touch /tmp/plugins-installed"
        - name: extraInitContainers[0].volumeMounts[0].name
          value: "plugin-data"
        - name: extraInitContainers[0].volumeMounts[0].mountPath
          value: "/tmp"
        # Add volumes for sharing data between containers
        - name: extraVolumes[0].name
          value: "plugin-data"
        - name: extraVolumes[0].emptyDir
          value: "{}"
        - name: extraVolumeMounts[0].name
          value: "plugin-data"
        - name: extraVolumeMounts[0].mountPath
          value: "/tmp"
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
