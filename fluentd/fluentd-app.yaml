apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluentd-application
  namespace: argocd
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  source:
    chart: fluentd
    repoURL: https://fluent.github.io/helm-charts
    targetRevision: 0.5.2
    helm:
      parameters:
        - name: image.repository
          value: fluent/fluentd-kubernetes-daemonset
        - name: image.tag
          value: v1.18-debian-papertrail-1
        - name: resources.requests.cpu
          value: "10m"
        - name: resources.requests.memory
          value: 128Mi
        - name: resources.limits.memory
          value: 128Mi
        - name: autoscaling.enabled
          value: "true"
        - name: autoscaling.minReplicas
          value: "1"
        - name: autoscaling.maxReplicas
          value: "2"
        - name: autoscaling.targetCPUUtilizationPercentage
          value: "80"
        - name: serviceAccount.create
          value: "true"
        - name: serviceAccount.name
          value: fluentd-role
        - name: serviceAccount.annotations.eks\.amazonaws\.com/role-arn
          value: arn:aws:iam::<YOUR_ACCOUNT_ID>:role/<YOUR_FLUENTD_ROLE>
        - name: plugins[0]
          value: fluent-plugin-grafana-loki
        - name: plugins[1]
          value: fluent-plugin-cloudwatch-logs
        - name: fileConfigs.01_sources\.conf
          value: |
            ## CloudWatch Logs input
            <source>
              @type cloudwatch_logs
              @id in_cloudwatch_logs
              region us-east-1
              tag cloudwatch.logs
              log_group_name /aws/lambda/my-function
              state_file /var/log/fluentd-cloudwatch.state
              <parse>
                @type json
              </parse>
            </source>
        - name: fileConfigs.02_filters\.conf
          value: |
            <filter cloudwatch.logs.**>
              @type record_transformer
              <record>
                source_type cloudwatch
                cloud_provider aws
                log_group ${tag_parts[1]}
              </record>
            </filter>
        - name: fileConfigs.03_outputs\.conf
          value: |
            <match cloudwatch.logs.**>
              @type loki
              url "http://loki-gateway.monitoring:80"
              extra_labels {"job": "fluentd-cloudwatch"}
              <label>
                source cloudwatch
                log_group ${log_group}
                aws_region ${record["awsRegion"]}
                cloud_provider aws
              </label>
              <buffer>
                @type memory
                chunk_limit_size 5MB
                flush_interval 5s
                flush_thread_count 8
                retry_max_interval 30
                retry_forever true
              </buffer>
            </match>
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true

